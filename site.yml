---
  - name: Install Java
    hosts: all
    tasks:
      - name: Set facts for Java 8 vars
        set_fact:
          java_home: "/opt/jdk/{{ java_jdk_version }}"
        tags: java
      - name: Upload .tar.gz file containing binaries from local storage
        copy:
          src: "{{ java_oracle_jdk_package }}"
          dest: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
        register: download_java_binaries
        until: download_java_binaries is succeeded
        tags: java
      - name: Ensure installation dir exists
        become: true
        file:
          state: directory
          path: "{{ java_home }}"
        tags: java
      - name: Extract java in the installation directory
        become: true
        unarchive:
          copy: false
          src: "/tmp/jdk-{{ java_jdk_version }}.tar.gz"
          dest: "{{ java_home }}"
          extra_opts: [--strip-components=1]
          creates: "{{ java_home }}/bin/java"
        tags:
          - skip_ansible_lint
          - java
      - name: Export environment variables
        become: true
        template:
          src: jdk.sh.j2
          dest: /etc/profile.d/jdk.sh
        tags: java
  - name: Install Elasticsearch
    hosts: ek
    tasks:
      - name: Upload tar.gz Elasticsearch from remote URL
        get_url:
          url: "https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
          dest: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
          mode: 0755
          timeout: 60
          force: true
          validate_certs: false
        register: get_elastic
        until: get_elastic is succeeded
        tags: elastic
      - name: Create directrory for Elasticsearch
        become: true
        file:
          state: directory
          path: "{{ elastic_home }}"
        tags: elastic
      - name: Extract Elasticsearch in the installation directory
        become: true
        unarchive:
          copy: false
          src: "/tmp/elasticsearch-{{ elastic_version }}-linux-x86_64.tar.gz"
          dest: "{{ elastic_home }}"
          extra_opts: [--strip-components=1]
          creates: "{{ elastic_home }}/bin/elasticsearch"
        tags:
          - skip_ansible_lint
          - elastic
      - name: Set environment Elastic
        become: yes
        template:
          src: templates/elk.sh.j2
          dest: /etc/profile.d/elk.sh
        tags: elastic
  - name: Install Kibana
    hosts: ek
    tasks:
      - name: Download Kibana
        get_url:
          url: "https://artifacts.elastic.co/downloads/kibana/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          dest: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          mode: 0755
          timeout: 60
          force: true
          validate_certs: false
        register: get_kibana
        until: get_kibana is succeeded
        tags: kibana
      - name: Create directory for Kibana
        become: true
        file:
          state: directory
          path: "{{ kibana_home }}"
        tags: kibana
      - name: Extract Kibana archive
        become: true
        unarchive:
          copy: false
          src: "/tmp/kibana-{{ kibana_version }}-linux-x86_64.tar.gz"
          dest: "{{ kibana_home }}"
          extra_opts: [--strip-components=1]
        tags:
          - skip_ansible_lint
          - kibana
      - name: Export env for Kiabana
        become: true
        template:
          src: kibana.sh.j2
          dest: /etc/profile.d/kibana.sh
        tags: kibana
  - name: Install Logstash
    hosts: ls
    tasks:
      - name: Download Logstash
        get_url:
          url: "https://artifacts.elastic.co/downloads/logstash/logstash-{{ logstash_version }}-linux-x86_64.tar.gz"
          dest: "/tmp/logstash-{{ logstash_version }}-linux-x86_64.tar.gz"
          mode: 0755
          timeout: 60
          force: true
          validate_certs: false
        register: get_logstash
        until: get_logstash is succeeded
        tags: logstash
      - name: Create directory for Logstash
        become: true
        file:
          state: directory
          path: "{{ logstash_home }}"
        tags: logstash
      - name: Extract Logstash archive
        become: true
        unarchive:
          copy: false
          src: "/tmp/logstash-{{ logstash_version }}-linux-x86_64.tar.gz"
          dest: "{{ logstash_home }}"
          extra_opts: [--strip-components=1]
        tags:
          - skip_ansible_lint
          - logstash
      - name: Export env for Logstash
        become: true
        template:
          src: logstash.sh.j2
          dest: /etc/profile.d/logstash.sh
        tags: logstash
      - name: Export Logstash config
        become: true
        template:
          src: logstash-sample.conf.j2
          dest: /opt/logstash/7.12.0/config/logstash-sample.conf
        tags: logstash